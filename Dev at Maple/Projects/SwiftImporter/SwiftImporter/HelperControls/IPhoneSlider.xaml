<UserControl x:Class="SwiftImporterUI.HelperControls.IPhoneSlider"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" >
    <UserControl.Resources>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnChecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="29"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnUnchecking">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <DockPanel x:Name="dockPanel">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                            <Border Margin="5,0,0,0"  Width="60" Height="26"  
                                                BorderThickness="1"  HorizontalAlignment="Right" CornerRadius="4" >
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="Gray"/>
                                        <!--<Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="Black" />
                                            </Trigger>
                                        </Style.Triggers>-->
                                    </Style>
                                </Border.Style>

                                <Grid  Width="60" >
                                    <Label Content="ON" FontWeight="Bold" Foreground="White"  
                                               Width="35" HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Label.Style>
                                            <Style>
                                                <Setter Property="Label.Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Color="#FF4B96FA" Offset="0.996"/>
                                                            <GradientStop Color="#FF7DC8FF" Offset="0.705"/>
                                                            <GradientStop Color="#FF001EE1" Offset="0"/>
                                                            <GradientStop Color="#FF327DFA" Offset="0.348"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>

                                            </Style>

                                        </Label.Style>


                                    </Label>
                                    <Label Content="OFF" HorizontalAlignment="Right" Width="30" HorizontalContentAlignment="Center">
                                        <Label.Style>
                                            <Style>
                                                <Setter Property="Label.Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFF0F0F0" Offset="0.996"/>
                                                            <GradientStop Color="#FFFFFFFF" Offset="0.705"/>
                                                            <GradientStop Color="#FFE1E1E1" Offset="0"/>
                                                            <GradientStop Color="#FFF0F0F0" Offset="0.353"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Label.Style>
                                    </Label>

                                    <Border x:Name="slider" Width="31.5"  HorizontalAlignment="Left" 
                                                RenderTransformOrigin="0.5,0.5" BorderThickness="1"
                                                CornerRadius="3">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0"/>
                                                <RotateTransform Angle="0"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" >
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFBEBEBE" Offset="0.996"/>
                                                            <GradientStop Color="#FFFAFAFA" Offset="0.705"/>
                                                            <GradientStop Color="#FF969696" Offset="0"/>
                                                            <GradientStop Color="#FFBEBEBE" Offset="0.348"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>



                                                <Setter Property="BorderBrush" Value="Gray"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="Black" />
                                                    </Trigger>
                                                </Style.Triggers>


                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </Grid>
                            </Border>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                                </Trigger.ExitActions>

                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" DataContext="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}}}">
        <CheckBox x:Name="mainChkBox" IsChecked="{Binding Path=IsOn, Mode=TwoWay}"
                  HorizontalAlignment="Left" Style="{DynamicResource CheckBoxStyle1}"  
                  VerticalAlignment="Center" Content="TBD"/>
    </Grid>
</UserControl>
